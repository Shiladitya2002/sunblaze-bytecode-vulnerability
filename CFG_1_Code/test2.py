import sys
import os
from evm_cfg_builder import CFG
from pathlib import Path
import pickle

IN_FILE = Path("C:\\Documents\\Dawn Song Lab\\Explore\\CFG_1\\DeFiAttacksSoK\\dataset\\bytecodes\\adversarial\\eth")
OUT_FILE = Path("C:\\Documents\\Dawn Song Lab\\Explore\\CFG_1\\Output\\output1")
def file_data_iter():
   for bytefile in os.listdir(IN_FILE):
      yield IN_FILE / bytefile
out_file = open(OUT_FILE, "wb")
cfg_arr = []
failed = 0
for bytefile in iter(file_data_iter()):
    with open(str(bytefile), "rb") as f:
        runtime_bytecode = f.read()
    try:
        cfg = CFG(runtime_bytecode)
        print("Completed: ", str(bytefile))
    except:
        print("Failed: ", str(bytefile))
        failed += 1
    #for basic_block in cfg.basic_blocks:
    #    print(
    #        f"{basic_block} -> {sorted(basic_block.all_outgoing_basic_blocks, key=lambda x:x.start.pc)}"
    #    )
    cfg_arr.append({"loc":str(bytefile), "cfg": cfg})
pickle.dump(cfg_arr, out_file)
print("Failed to generate CFG for", str(failed), "files.")
                   
    