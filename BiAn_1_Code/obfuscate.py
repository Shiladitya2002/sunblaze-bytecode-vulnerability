import os
import subprocess
from pathlib import Path
import shutil

size = 10
bian_obfuscate = Path("C:\\Documents\\Dawn Song Lab\\Explore\\BiAn_1\\BiAn-master\\src")
ast_dir = Path("C:\\Documents\\Dawn Song Lab\\Explore\\BiAn_1\\caches\\compile_dataset")
sol_dir = Path("C:\\Documents\\Dawn Song Lab\\Explore\\BiAn_1\\caches\\slither_dataset")
output_dir = Path("C:\\Documents\\Dawn Song Lab\\Explore\\BiAn_1\\caches\\obfuscate_dataset")

print("Begin Directory Walk")
base_command = "python main.py \"{sol_input}\" \"{ast_input}\""
version_command = "solc-select use {version}"
fails = 0
succeeds = 0
astsuffix = ".ast"

for version in os.listdir(ast_dir):
    # Switch solc version
    out_obj = subprocess.Popen(version_command.format(version=version), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)
    out_obj.wait()
    stdout = out_obj.communicate()[0].decode()
    print("-----------------------------------")
    print(stdout)
    # Make folder for version
    os.makedirs(output_dir / version, exist_ok=True)
    # Check version to change ast name
    if '0.6' in str(version): astsuffix = '_json.ast'
    # Loop through files for version
    for file in os.listdir(ast_dir / version):
        if succeeds >= size: break
        # Prepare variables (AST location, Sol location)
        astname = str(file) + astsuffix
        ast_input = str(ast_dir / version / file / astname)
        sol_input = str(sol_dir / version / file)
        # Prepare and run command
        command = "cd \"" + str(bian_obfuscate) + "\" && " + base_command.format(sol_input=sol_input, ast_input=ast_input)
        out_obj = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)
        out_obj.wait()
        # Decode standard out and move obfuscated sol file to proper location
        stdout = out_obj.communicate()[0].decode()
        shutil.copyfile(str(bian_obfuscate / "temp_layout_confuse.sol"), str(output_dir / version / file))
        print("-----------------------------------")
        print(stdout)
        # Increment and print progress
        succeeds += 1
        if succeeds%100==0: print("# contracts obfuscated: " + str(succeeds))